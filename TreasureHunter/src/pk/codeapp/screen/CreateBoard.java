/* 
 * To change this license header, choose License Headers in Project Properties. 
 * To change this template file, choose Tools | Templates 
 * and open the template in the editor. 
 */ 
package pk.codeapp.screen; 
 
import java.awt.BorderLayout; 
import java.awt.event.MouseEvent; 
import java.awt.event.MouseListener; 
import javax.swing.JFrame; 
import pk.codeapp.methods.DrawingSurface; 
 
/** 
 * 
 * @author Jose Pablo Brenes 
 */ 
public class CreateBoard extends javax.swing.JFrame implements MouseListener { 
 
    /** 
     * Creates new form Pantalla 
     */ 
    private static DrawingSurface drawingSurface; 
    private static int posXMouse; 
    private static int posYMouse; 
    private static int xOffset; 
    private static int yOffset; 
    private static int widhtDS = 800; 
    private static int heightDS = 800; 
    private static int COLUMN = 10, ROW = 10, SIDE = 80; 
    private static int column; 
    private static int row; 
    private static boolean activateMouse; 
    private static String methods; 
 
    public CreateBoard(String nombre) { 
        initComponents(); 
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
        this.setTitle(nombre); 
        this.setResizable(false); 
        this.setLayout(new BorderLayout()); 
        drawingSurface = new DrawingSurface(widhtDS, heightDS); 
        this.drawingSurface = drawingSurface; 
        this.add(drawingSurface); 
        drawingSurface.addMouseListener(this); 
        addMouseListener(this); 
        this.setLocationRelativeTo(null); 
        this.setVisible(true); 
        startGame(); 
    } 
 
    /** 
     * This method is called from within the constructor to initialize the form. 
     * WARNING: Do NOT modify this code. The content of this method is always 
     * regenerated by the Form Editor. 
     */ 
    @SuppressWarnings("unchecked") 
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents 
    private void initComponents() { 
 
        jPanel1 = new javax.swing.JPanel(); 
        jLabel1 = new javax.swing.JLabel(); 
        jLabel2 = new javax.swing.JLabel(); 
        jButton2 = new javax.swing.JButton(); 
        jLabel3 = new javax.swing.JLabel(); 
        jButton1 = new javax.swing.JButton(); 
        jLabel4 = new javax.swing.JLabel(); 
        jButton3 = new javax.swing.JButton(); 
 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); 
        setSize(new java.awt.Dimension(1280, 800)); 
 
        jPanel1.setBackground(new java.awt.Color(92, 107, 192)); 
 
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N 
        jLabel1.setForeground(new java.awt.Color(255, 255, 255)); 
        jLabel1.setText("Choose the option you want to use"); 
 
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N 
        jLabel2.setForeground(new java.awt.Color(255, 255, 255)); 
        jLabel2.setText("Create Map"); 
 
        jButton2.setBackground(new java.awt.Color(0, 0, 0)); 
        jButton2.setForeground(new java.awt.Color(0, 0, 0)); 
        jButton2.setIcon(new javax.swing.ImageIcon("E:\\Segundo Semestre 2017\\Estructuras\\Plantilla_Tablero\\src\\tools\\Webp.net-resizeimage.png")); // NOI18N 
        jButton2.setToolTipText("Click to create pictures in the matrix "); 
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() { 
            public void mouseClicked(java.awt.event.MouseEvent evt) { 
                jButton2MouseClicked(evt); 
            } 
        }); 
 
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N 
        jLabel3.setForeground(new java.awt.Color(255, 255, 255)); 
        jLabel3.setText("Linking Pictures"); 
 
        jButton1.setBackground(new java.awt.Color(0, 0, 0)); 
        jButton1.setIcon(new javax.swing.ImageIcon("E:\\Segundo Semestre 2017\\Estructuras\\Plantilla_Tablero\\src\\tools\\Linkening.png")); // NOI18N 
        jButton1.setToolTipText("Click first picture to start linking after click second picture to final linkening"); 
 
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N 
        jLabel4.setForeground(new java.awt.Color(255, 255, 255)); 
        jLabel4.setText("Delete Picture"); 
 
        jButton3.setBackground(new java.awt.Color(0, 0, 0)); 
        jButton3.setIcon(new javax.swing.ImageIcon("E:\\Segundo Semestre 2017\\Estructuras\\Plantilla_Tablero\\src\\tools\\delete.png")); // NOI18N 
 
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1); 
        jPanel1.setLayout(jPanel1Layout); 
        jPanel1Layout.setHorizontalGroup( 
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(jPanel1Layout.createSequentialGroup() 
                .addContainerGap(59, Short.MAX_VALUE) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup() 
                        .addComponent(jLabel1) 
                        .addGap(25, 25, 25)) 
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup() 
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
                            .addComponent(jLabel3) 
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE) 
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false) 
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE) 
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)) 
                            .addGroup(jPanel1Layout.createSequentialGroup() 
                                .addGap(10, 10, 10) 
                                .addComponent(jLabel4))) 
                        .addGap(116, 116, 116)) 
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup() 
                        .addComponent(jLabel2) 
                        .addGap(152, 152, 152)))) 
        ); 
        jPanel1Layout.setVerticalGroup( 
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(jPanel1Layout.createSequentialGroup() 
                .addGap(19, 19, 19) 
                .addComponent(jLabel1) 
                .addGap(27, 27, 27) 
                .addComponent(jLabel2) 
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED) 
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE) 
                .addGap(62, 62, 62) 
                .addComponent(jLabel3) 
                .addGap(37, 37, 37) 
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE) 
                .addGap(66, 66, 66) 
                .addComponent(jLabel4) 
                .addGap(26, 26, 26) 
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE) 
                .addContainerGap(50, Short.MAX_VALUE)) 
        ); 
 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); 
        getContentPane().setLayout(layout); 
        layout.setHorizontalGroup( 
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup() 
                .addGap(0, 835, Short.MAX_VALUE) 
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) 
        ); 
        layout.setVerticalGroup( 
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) 
        ); 
 
        pack(); 
    }// </editor-fold>//GEN-END:initComponents 
 
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked 
        activateMouse=true; 
        methods = "paint"; 
    }//GEN-LAST:event_jButton2MouseClicked 
 
    /** 
     * @param args the command line arguments 
     */ 
    @Override 
    public void mouseClicked(MouseEvent e) { 
        if (activateMouse) { 
            this.posXMouse = e.getX(); 
            this.posYMouse = e.getY(); 
            System.out.println("Entro en el mouse"); 
            if (posXMouse <= (drawingSurface.getWidht()) - 20 && posYMouse <= (drawingSurface.getHeight()) && posXMouse >= 0 && posYMouse >= 0) { // verify that the mouse is inside the superficie 
                System.out.println("Esta en el rango"); 
                switch(methods){ 
                    case("paint"): 
                        paintFrame(); 
                } 
                 
            } 
        } 
    } 
 
    @Override 
    public void mousePressed(MouseEvent e) { 
 
    } 
 
    @Override 
    public void mouseReleased(MouseEvent e) { 
 
    } 
 
    @Override 
    public void mouseEntered(MouseEvent e) { 
 
    } 
 
    @Override 
    public void mouseExited(MouseEvent e) { 
        System.out.println("Salio"); 
    } 
 
    public static void startGame() { 
        xOffset = (widhtDS - (COLUMN * SIDE)) / 2; 
        yOffset = (heightDS- (ROW * SIDE)) / 2; 
        iterarBuclePrincipal(); 
    } 
 
    public static void iterarBuclePrincipal() { 
        while (true) { 
            update(); 
 
        } 
    } 
 
    public static void update() { 
        drawingSurface.paint(); 
    } 
 
    public static void paintFrame() { 
        if (posXMouse <= (drawingSurface.getWidht()) - 20 && posYMouse <= (drawingSurface.getHeight()) && posXMouse >= 0 && posYMouse >= 0) { 
            column = (posXMouse - xOffset) / SIDE; 
            row = (posYMouse - yOffset) / SIDE; 
            if (column >= 0 && row >= 0) { 
                System.out.println("Columna: " + column); 
                System.out.println("Fila: " + row); 
                drawingSurface.paintFrame(column, row); 
            } 
        } 
    } 
 
    // Variables declaration - do not modify//GEN-BEGIN:variables 
    private javax.swing.JButton jButton1; 
    private javax.swing.JButton jButton2; 
    private javax.swing.JButton jButton3; 
    private javax.swing.JLabel jLabel1; 
    private javax.swing.JLabel jLabel2; 
    private javax.swing.JLabel jLabel3; 
    private javax.swing.JLabel jLabel4; 
    private javax.swing.JPanel jPanel1; 
    // End of variables declaration//GEN-END:variables 
} 

